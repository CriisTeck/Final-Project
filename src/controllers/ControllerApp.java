package controllers;
import views.IOManager;
import exceptions.*;
import models.*;
public class ControllerApp {
	private IOManager view;
	private Colombia model;
	
	public ControllerApp() {
		view = new IOManager();
		model = new Colombia();
		model.autogenerateDepartment();
		init();
	}
	
	public void init() {
		//		addMine();
		try {
			int option;
			do {
				option = view.selectOptionMenu();
				switch (option) {
				case 1:
					showTable();
					break;
				case 2: 
					addMine();
					break;
				case 3: 
					removeMine();
					break;
				case 4:
					editMine();
					break;
				case 5:
					break;
				default:
					throw new OptionInvalidException();
				}
			} while (option != 5 );
		} catch(OptionInvalidException e) {
			view.showError(e.getMessage());
			init();
		} catch(NumberFormatException e2) {
			view.showError("Opcion Invalida");
			init();
		}
	}
	
	public void showTable() {
		view.showTable(model.getListDepartment());
	}
	
	public void addMine() {
		try {
			model.createMine(view.readDepartment(), view.readNameMine(), view.readMeterMine(), view.readOreType(), view.readKilogram(), view.readId(), view.readMineType(), view.readBudgetMine());
		} catch (DepartmentNotFoundException e) {
			view.showError(e.toString());
		}
	}
	
	public void removeMine() {
		try {
			model.sendRemoveMine(view.readDepartment(), view.readId());
		} catch (MineNotFoundException e) {
			view.showError(e.getMessage());
		}
	}
	
	public void editMine() throws OptionInvalidException {
		int option = view.selectOptionMenuEdit();
		switch (option) {
		case 1:
			editKilogramPrice();
			break;
		case 2:
			editOreType();
			break;
		case 3:
			break;
		default:
			throw new OptionInvalidException();
		}
	}
	
	public void editKilogramPrice() {
		try {
			model.editKilogramPriceMine(view.readDepartment(), view.readId(), view.readKilogram());
			view.showSucesfull();
		} catch (MineNotFoundException | DepartmentNotFoundException e) {
			view.showError(e.getMessage());
		}
		
	}
	
	public void editOreType() {
		try {
			DepartmentName department = view.readDepartment();
			int id = view.readId();
			MineType mineType = view.readMineType();
			OreType oreType = view.readOreType();
			model.editOreType(department,id,oreType);
			model.editMineType(department, id, mineType);
			view.showSucesfull();
		} catch (MineNotFoundException | DepartmentNotFoundException e) {
			view.showError(e.getMessage());
		}
	}
}
