package models;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.jfree.data.category.*;
import exceptions.DepartmentNotFoundException;
import exceptions.MineNotFoundException;
import models.utils.*;

public class Colombia {
	private Department[] listDepartment;
	
	public Colombia() {
		listDepartment = new Department[10]; 
	}
	
	public void autogenerateDepartment() {
		for (int i = 0; i < listDepartment.length; i++) {
			listDepartment[i] = new Department(DepartmentName.values()[i],250000);
		}
	}
	
	public int searchDepartment(DepartmentName name) throws DepartmentNotFoundException {
		for (int i = 0; i < listDepartment.length; i++) {
			if(listDepartment[i].getName().equals(name.getName()))
				return i;
		}
		throw new DepartmentNotFoundException();
	}
	
	public void createMine(DepartmentName department, String nameMine,int meter, OreType oreType, int kilogramPrice, int id, MineType mineType,int budgetMine) throws DepartmentNotFoundException {
		listDepartment[searchDepartment(department)].addMine(new Mine(nameMine,meter,oreType, kilogramPrice,id,mineType,budgetMine));
	}
	
	public void sendRemoveMine(DepartmentName department, int id) throws MineNotFoundException {
		for (Department department2 : listDepartment) {
			if(department2.getName().equals(department.getName()))
				department2.removeMine(id);
		}
	}
	
	public Department[] getListDepartment() {
		return listDepartment;
	}
	
	public void editKilogramPriceMine(DepartmentName department, int id, int newKilogramPrice) throws MineNotFoundException, DepartmentNotFoundException {
		listDepartment[searchDepartment(department)].editKilogramPrice(newKilogramPrice, id);
	}
	
	public void editOreType(DepartmentName department, int idMine, OreType oreType) throws MineNotFoundException, DepartmentNotFoundException {
		listDepartment[searchDepartment(department)].editOreType(oreType, idMine);
	}
	
	public void editMineType(DepartmentName department, int idMine, MineType type) throws MineNotFoundException, DepartmentNotFoundException {
		listDepartment[searchDepartment(department)].editMineType(type, idMine);
	}
	
	public void sellOre(DepartmentName department, int idMine, int kilos) throws MineNotFoundException, DepartmentNotFoundException {
		listDepartment[searchDepartment(department)].sellOre(idMine, kilos);
	}
	
	public void buyInsumes(DepartmentName department, int idMine, int mount) throws MineNotFoundException, DepartmentNotFoundException {
		listDepartment[searchDepartment(department)].buyInsumes(idMine, mount);
	}
	
	public Object[] generateReportGainsPerMine(DepartmentName dep) throws DepartmentNotFoundException {
		DefaultCategoryDataset data = new DefaultCategoryDataset();
		List<Mine> list = listDepartment[searchDepartment(dep)].getListMine();
		for (int i = 0; i < list.size(); i++) {
			data.addValue(list.get(i).getGain(), list.get(i).getName(), "Minas");
		}
		return new Object[] { data, dep.getName() };
	}
	
	public void generateReportGains() {
		
	}
	
	public Object[] generateReportMinesPerDepartment() {
		Map<String,Integer> data = new HashMap<String,Integer>();
		for (int i = 0; i < listDepartment.length; i++) {
			data.put(listDepartment[i].getName(),listDepartment[i].getListMine().size());
		}
		return MatrixReport.generateMatrixReport(data);
	}

}





