package models;

import exceptions.DepartmentNotFoundException;
import exceptions.MineNotFoundException;

public class Colombia {
	private Department[] listDepartment;
	
	public Colombia() {
		listDepartment = new Department[10]; 
	}
	
	public void autogenerateDepartment() {
		listDepartment[0] = new Department(DepartmentName.BOYACA,250000);
		listDepartment[1] = new Department(DepartmentName.CUNDINAMARCA,250000);
		listDepartment[2] = new Department(DepartmentName.ANTIOQUIA,250000);
		listDepartment[3] = new Department(DepartmentName.TOLIMA,250000);
		listDepartment[4] = new Department(DepartmentName.SANTANDER,250000);
		listDepartment[5] = new Department(DepartmentName.NORTE_DE_SANTANDER,250000);
		listDepartment[6] = new Department(DepartmentName.CORDOBA,250000);
		listDepartment[7] = new Department(DepartmentName.CESAR,250000);
		listDepartment[8] = new Department(DepartmentName.LA_GUAJIRA,250000);
		listDepartment[9] = new Department(DepartmentName.CAUCA,250000);
	}
	
	public int searchDepartment(DepartmentName name) throws DepartmentNotFoundException {
		for (int i = 0; i < listDepartment.length; i++) {
			if(listDepartment[i].getName().equals(name.getName()))
				return i;
		}
		throw new DepartmentNotFoundException();
	}
	
	public void createMine(DepartmentName department, String nameMine,int meter, OreType oreType, int kilogramPrice, int id, MineType mineType,int budgetMine) throws DepartmentNotFoundException {
		listDepartment[searchDepartment(department)].addMine(new Mine(nameMine,meter,oreType, kilogramPrice,id,mineType,budgetMine));
	}
	
	public void sendRemoveMine(DepartmentName department, int id) throws MineNotFoundException {
		for (Department department2 : listDepartment) {
			if(department2.getName().equals(department.getName()))
				department2.removeMine(id);
		}
	}
	
	public Department[] getListDepartment() {
		return listDepartment;
	}
	public void modifyDataMine(int option, DepartmentName department, int id, int newData) {
		for (Department department2 : listDepartment) {
			if(department2.getName().equals(department.getName())) {

				switch (option) {
				case 1:
					try {
						department2.searchMine(id).setKilogramPrice(newData);
					} catch (MineNotFoundException e) {
						e.printStackTrace();
					}
					break;
				case 2: 
					break;
				case 3:
					break;
				default:
					break;
				}
			}
		}
	}
}





